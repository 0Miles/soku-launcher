<Window x:Class="SokuLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SokuLauncher" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:converters="clr-namespace:SokuLauncher.Converters"
        mc:Ignorable="d"
        x:Name="SokuLauncherMainWindow" Background="{x:Null}" AllowsTransparency="True" WindowStyle="None" Topmost="True"
        Title="SokuLauncher" Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" SizeToContent="WidthAndHeight" Icon="/Resources/icon.ico">
    <Window.Resources>
        <converters:RelativePathConverter x:Key="RelativePathConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter" />
        <Style x:Key="BorderButtonStyle" TargetType="{x:Type Border}">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1.035" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseIn"></QuadraticEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1.035" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <QuadraticEase EasingMode="EaseIn"></QuadraticEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MediaElementHoverOpacityStyle" TargetType="{x:Type MediaElement}">
            <Setter Property="Opacity" Value=".3"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".8" Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".3" Duration="0:0:.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ImageHoverOpacityStyle" TargetType="{x:Type Image}">
            <Setter Property="Opacity" Value=".5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".8" Duration="0:0:1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".5" Duration="0:0:.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="NoMouseOverButtonTemplate" TargetType="Button">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                    <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListView Grid.Row="1"
            ItemsSource="{Binding SokuModSettingGroups}"
            Focusable="False"
            SelectedItem="{Binding SelectedSokuModSettingGroup}"
            FocusVisualStyle="{x:Null}"
            BorderThickness="0"
            BorderBrush="{x:Null}"
            Background="{x:Null}"
            SelectionChanged="SokuModSettingGroupsListView_SelectionChanged">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical" FlowDirection="RightToLeft"  MaxHeight="830" ScrollViewer.CanContentScroll="False" Loaded="WrapPanel_Loaded" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Style="{StaticResource BorderButtonStyle}"  Background="Black" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Center" MinWidth="250" Height="150" Margin="8" Cursor="Hand">
                                    <Grid>
                                        <Grid>
                                            <MediaElement
                                                  Style="{StaticResource MediaElementHoverOpacityStyle}"
                                                  FlowDirection="LeftToRight"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  Stretch="UniformToFill"
                                                  Source="{Binding Path=Cover, Converter={StaticResource RelativePathConverter}}" 
                                                  LoadedBehavior="Manual"
                                                  UnloadedBehavior="Stop"
                                                  ScrubbingEnabled="True"
                                                  Loaded="MediaElement_Loaded"
                                                  MediaEnded="MediaElement_MediaEnded"
                                                  MouseEnter="MediaElement_MouseEnter"
                                                  MouseLeave="MediaElement_MouseLeave"
                                                  Visibility="{Binding IsImageCover, Converter={StaticResource ReverseBooleanToVisibilityConverter}, ConverterParameter=False}">
                                            </MediaElement>
                                            <Image
                                                Style="{StaticResource ImageHoverOpacityStyle}"
                                                FlowDirection="LeftToRight"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Stretch="UniformToFill"
                                                Source="{Binding Path=Cover, Converter={StaticResource RelativePathConverter}}"
                                                Visibility="{Binding IsImageCover, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=False}">
                                                
                                            </Image>
                                        </Grid>
                                        <Border Background="{x:Null}" HorizontalAlignment="Stretch" Padding="48,0">
                                            <Grid VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{Binding Name}" IsHitTestVisible="False" Foreground="White" FontSize="32" HorizontalAlignment="Center" />
                                                <TextBlock Grid.Row="1" Text="{Binding Desc}" IsHitTestVisible="False" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,16" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Border Grid.Row="0" Background="#CCAC0000"  BorderThickness="0" HorizontalAlignment="Right" VerticalAlignment="Center" Height="35" Width="35" Margin="8, 0" Cursor="Hand">
            <Button Template="{StaticResource NoMouseOverButtonTemplate}" Background="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Padding="0" Click="ExitButton_Click">
                <TextBlock Text="×" Foreground="White" FontSize="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Button>
        </Border>
    </Grid>
</Window>
